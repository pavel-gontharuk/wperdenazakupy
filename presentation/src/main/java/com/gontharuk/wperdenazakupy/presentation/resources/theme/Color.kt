package com.gontharuk.wperdenazakupy.presentation.resources.theme

import androidx.compose.ui.graphics.Color

/** Light */
val Primary_light = Color(0xFF000000)
val OnPrimary_light = Color(0xFF000000)
val PrimaryContainer_light = Color(0xFF000000)
val OnPrimaryContainer_light = Color(0xFF000000)
val InversePrimary_light = Color(0xFFFFFFFF)
val Secondary_light = Color(0xFF000000)
val OnSecondary_light = Color(0xFF000000)
val SecondaryContainer_light = Color(0xFF000000)
val OnSecondaryContainer_light = Color(0xFF000000)
val Tertiary_light = Color(0xFF000000)
val OnTertiary_light = Color(0xFF000000)
val TertiaryContainer_light = Color(0xFF000000)
val OnTertiaryContainer_light = Color(0xFF000000)
val Background_light = Color(0xFFE9E9E9)
val OnBackground_light = Color(0xFF000000)
val Surface_light = Color(0xFF000000)
val OnSurface_light = Color(0xFF000000)
val SurfaceVariant_light = Color(0xFF000000)
val OnSurfaceVariant_light = Color(0xFF000000)
val SurfaceTint_light = Color(0xFF000000)
val InverseSurface_light = Color(0xFF000000)
val InverseOnSurface_light = Color(0xFF000000)
val Error_light = Color(0xFF000000)
val OnError_light = Color(0xFF000000)
val ErrorContainer_light = Color(0xFF000000)
val OnErrorContainer_light = Color(0xFF000000)
val Outline_light = Color(0xFF000000)
val OutlineVariant_light = Color(0xFF000000)
val Scrim_light = Color(0xFF000000)

/** Dark */
val Primary_dark = Color(0xFFFFFFFF)
val OnPrimary_dark = Color(0xFFFFFFFF)
val PrimaryContainer_dark = Color(0xFFFFFFFF)
val OnPrimaryContainer_dark = Color(0xFFFFFFFF)
val InversePrimary_dark = Color(0xFF000000)
val Secondary_dark = Color(0xFFFFFFFF)
val OnSecondary_dark = Color(0xFFFFFFFF)
val SecondaryContainer_dark = Color(0xFFFFFFFF)
val OnSecondaryContainer_dark = Color(0xFFFFFFFF)
val Tertiary_dark = Color(0xFFFFFFFF)
val OnTertiary_dark = Color(0xFFFFFFFF)
val TertiaryContainer_dark = Color(0xFFFFFFFF)
val OnTertiaryContainer_dark = Color(0xFFFFFFFF)
val Background_dark = Color(0xFF161616)
val OnBackground_dark = Color(0xFFFFFFFF)
val Surface_dark = Color(0xFFFFFFFF)
val OnSurface_dark = Color(0xFFFFFFFF)
val SurfaceVariant_dark = Color(0xFFFFFFFF)
val OnSurfaceVariant_dark = Color(0xFFFFFFFF)
val SurfaceTint_dark = Color(0xFFFFFFFF)
val InverseSurface_dark = Color(0xFFFFFFFF)
val InverseOnSurface_dark = Color(0xFFFFFFFF)
val Error_dark = Color(0xFFFFFFFF)
val OnError_dark = Color(0xFFFFFFFF)
val ErrorContainer_dark = Color(0xFFFFFFFF)
val OnErrorContainer_dark = Color(0xFFFFFFFF)
val Outline_dark = Color(0xFFFFFFFF)
val OutlineVariant_dark = Color(0xFFFFFFFF)
val Scrim_dark = Color(0xFFFFFFFF)